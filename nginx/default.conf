upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:8000;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443;
    server_name j6d202.p.ssafy.io;

    ssl_certificate /etc/letsencrypt/live/j6d202.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/j6d202.p.ssafy.io/privkey.pem;
    ssl_dhparam /etc/letsencrypt/dhparam.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    location / {
        set $upstream frontend;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://$upstream;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location /api { # 이 부분은 api라는 uri로 통신 시 백엔드에 프록시 처리를 하기 위함
        set $upstream2 backend;
        
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass   http://$upstream2;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
        proxy_set_header Connection "upgrade";
        proxy_set_header  Host $http_host;
        proxy_redirect    off;

    }

    location /media/ {
        autoindex on;
        alias /usr/shar/nginx/html/media/;
    }
}